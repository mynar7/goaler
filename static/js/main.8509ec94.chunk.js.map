{"version":3,"sources":["components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/login/login.jsx","components/loading/loading.jsx","components/header/header.jsx","components/mainmenu/mainmenu.jsx","components/dashboard/goalform.jsx","components/dashboard/timer.jsx","components/dashboard/timedue.jsx","components/dashboard/timestamp.jsx","components/dashboard/timercompleted.jsx","components/dashboard/goalitem.jsx","components/dashboard/repeatform.jsx","components/dashboard/multigoallist.jsx","components/dashboard/multigoalitem.jsx","components/dashboard/clock.jsx","components/dashboard/completedcounter.jsx","components/dashboard/centeredModal.jsx","components/settings/settings.jsx","components/dashboard/index.js","components/dashboard/dashboard.jsx","components/about/about.jsx","App.js","theme.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","react_default","a","createElement","Consumer","firebase","Object","assign","config","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","components_Firebase","Firebase","_this","this","classCallCheck","signIn","provider","auth","GoogleAuthProvider","signInWithPopup","catch","err","console","log","logout","signOut","redirect","getRedirectResult","initializeUser","uid","goalsRef","db","collection","concat","settingsRef","app","initializeApp","firestore","settings","Login","Fragment","Card_default","className","Typography_default","variant","gutterBottom","align","user","displayName","Button_default","color","onClick","history","push","login","Loading","status","CircularProgress_default","size","children","Header","AppBar_default","position","style","backgroundColor","theme","palette","primary","main","Toolbar_default","Link","to","aria-label","Beenhere_default","IconButton_default","toggleDrawer","Menu_default","withTheme","MainMenu","navigate","route","_this2","List_default","ListItem_default","button","ListItemIcon_default","Home_default","ListItemText_default","DoneAll_default","Info_default","Settings_default","Divider_default","ExitToApp_default","withRouter","GoalForm","possibleConstructorReturn","getPrototypeOf","call","toggleMultigoal","setState","multigoal","state","toggleTimedgoal","timedgoal","handleChange","name","event","defineProperty","target","value","validate","nameErr","nameHelper","dateErr","dateHelper","timeErr","timeHelper","date","time","now","Date","dateArgs","split","map","str","Number","datetime","construct","toConsumableArray","getTime","toDateString","handleSubmit","d","n","initialState","goal","subgoal","doc","parentGoalId","id","update","completed","updatedAt","then","toggleModal","add","createdAt","plusOneDay","leadingZero","num","tomorrow","getFullYear","getMonth","getDate","today","maxDate","currentTime","getHours","getMinutes","milliseconds","prevProps","prevState","CardHeader_default","avatar","Avatar_default","secondary","text","AddAlarm_default","title","action","tabIndex","Close_default","CardContent_default","Grid_default","container","spacing","item","xs","TextField_default","label","placeholder","error","onChange","fullWidth","margin","helperText","md","type","InputLabelProps","shrink","InputProps","inputProps","min","max","FormGroup_default","row","FormControlLabel_default","control","Switch_default","checked","subgoalsAdded","CardActions_default","Timer","checkTime","updateTime","unMounting","counting","timeRemaining","Math","abs","seconds","floor","minutes","hours","days","toString","requestAnimationFrame","classes","TimeDue","ms","diff","toLocaleString","TimeStamp","updated","created","timeStatus","renderSpans","TimerCompleted","completionTime","round","GoalItem","handleMenuClick","anchorEl","currentTarget","handleClose","handleCompleteToggle","newCompletedStatus","goalRef","completedAt","countRef","get","newCount","data","count","set","enabled","triggerModal","modalToggleFn","toggleRepeatModal","parentGoalName","parentGoal","parentGoalDate","handleDelete","delete","toggleTimeView","timeView","deleteSelf","open","Boolean","timestamp","dashboard_timer","primaryTypographyProps","width","secondaryTypographyProps","timercompleted","dashboard_timedue","ListItemSecondaryAction_default","CheckBox_default","CheckBoxOutlineBlank_default","MoreVert_default","core_Menu_default","onClose","MenuItem_default","Edit_default","inset","Replay_default","Delete_default","nativeColor","warn","RepeatForm","handleText","goalErr","goalErrMsg","formError","handleTime","_this$setState","unit","Err","ErrMsg","hasError","isNaN","months","plusMonth","setMonth","toggleChip","chip","resetBadFields","minutesErr","minutesErrMsg","hoursErr","hoursErrMsg","daysErr","daysErrMsg","weeksErr","weeks","weeksErrMsg","step","required","onBlur","RadioGroup_default","Radio_default","root","endAdornment","InputAdornment_default","Chip_default","icon","Alarm_default","disabled","MultiGoalList","subgoals","deleteInProgress","length","deleteParent","onSnapshot","snapshot","forEach","objectSpread","filter","completePercentage","updateProgress","_this3","Collapse_default","in","timeout","unmountOnExit","component","disablePadding","sort","goalA","goalB","dashboard_goalitem","key","MultiGoalItem","document","hidden","progress","startDelete","subgoalsOpen","finishDelete","toggleSubgoals","newPercentage","loading","setTimeout","ExpandLess_default","ExpandMore_default","Add_default","LinearProgress_default","multigoallist","Clock","unmounting","newTime","options","weekday","year","month","day","hour","minute","second","CompletedCounter","completeCount","dashboard_centeredModal","_ref","Children","rest","objectWithoutProperties","Modal_default","getNewBackground","fetch","res","body","backgroundImage","url","Settings","toggleEnableSwitch","setting","loading_loading","justify","completedcounter","completedCount","clock","Dashboard","componentDidMount","goals","empty","initializeSettings","settingsLoaded","background","modalState","goalModalOpen","repeatModalOpen","repeatModalState","undefined","dashboard_multigoalitem","dashboard_goalform","dashboard_repeatform","Fab_default","About","alignItems","lg","href","rel","PrivateRoute","Route","render","Redirect","pathname","from","location","App","onAuthStateChanged","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","sent","stop","drawer","BrowserRouter","basename","header_header","Drawer_default","anchor","mainmenu_mainmenu","path","login_login","App_PrivateRoute","exact","createMuiTheme","blue","purple","orange","red","contrastThreshold","tonalOffset","typography","useNextVariants","isLocalhost","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","context","Provider","styles","CssBaseline_default","src_App_0","getElementById","URL","origin","addEventListener","response","contentType","headers","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8509ec94.chunk.js","sourcesContent":["import React from 'react';\n\nconst FirebaseContext = React.createContext(null);\n\nexport const withFirebase = Component => props => (\n    <FirebaseContext.Consumer>\n        {firebase => <Component {...props} firebase={firebase} />}\n    </FirebaseContext.Consumer>\n);\n\nexport default FirebaseContext;","import app, { auth } from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n// Initialize Firebase\nconst config = {\n    apiKey: process.env.REACT_APP_FIREBASE_apiKey,\n    authDomain: process.env.REACT_APP_FIREBASE_authDomain,\n    databaseURL: process.env.REACT_APP_FIREBASE_databaseURL,\n    projectId: process.env.REACT_APP_FIREBASE_projectId,\n    storageBucket: process.env.REACT_APP_FIREBASE_storageBucket,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_messagingSenderId\n};\n\nclass Firebase {\n    constructor() {\n        app.initializeApp(config);\n        this.auth = app.auth();\n        this.db = app.firestore();\n        // const settings = {/* your settings... */ timestampsInSnapshots: true};\n        this.db.settings({});\n        // this.userRef = null;\n        // this.goalsRef = null;\n    }\n    signIn = () => {\n        const provider = new auth.GoogleAuthProvider();\n        // return this.auth.signInWithRedirect(provider).catch(err => console.log(err));\n        return this.auth.signInWithPopup(provider).catch(err => console.log(err));\n    }\n    logout = () => {\n        return this.auth.signOut();\n    }\n    redirect = () => {\n        return this.auth.getRedirectResult();\n    }\n    initializeUser = (uid) => {\n        this.goalsRef = this.db.collection(`users/${uid}/goals`);\n        this.settingsRef = this.db.collection(`users/${uid}/settings`)\n        // this.db.collection(`users/${uid}/goals/${goalid}/subgoals`);\n        // this.goalsRef = this.userRef.collection(\"goals\");\n    }\n}\n\nexport default Firebase;\n","import FirebaseContext, { withFirebase } from './context';\nimport Firebase from './firebase';\n\nexport default Firebase;\n\nexport { FirebaseContext, withFirebase };","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\n// import CardMedia from '@material-ui/core/CardMedia';\n// import CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\n// import Grid from '@material-ui/core/Grid';\n// import LogoIcon from '@material-ui/icons/Beenhere';\nimport Button from '@material-ui/core/Button';\n// import darts from './darts.jpeg';\n\nimport './login.css';\n\nclass Login extends Component {\n    render() {\n        return (\n            <React.Fragment>\n\n            <Card className=\"login-titleCard\">\n                {/* <CardMedia\n                    className=\"login-titleCard_img\"\n                    component=\"img\"\n                    alt=\"Inspirational Goal Image\"\n                    image={darts}/> */}\n                <div className=\"login-titleCard_container\">\n                    <Typography variant=\"h2\" className=\"login-titleCard_title\" gutterBottom>\n                        Welcome to <strong>GOALER</strong>\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Track your goals.\n                    </Typography>\n                    <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_subtitle\" gutterBottom>\n                        Get more things done.\n                    </Typography>\n                    {\n                        this.props.user\n                        ? <React.Fragment>\n                            <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                                Welcome, {this.props.user.displayName}\n                            </Typography>\n                            <Button variant=\"contained\" color=\"secondary\" className=\"login-titleCard_dashBtn\" onClick={() => this.props.history.push('/')}>\n                                See your Goals\n                            </Button>\n                        </React.Fragment>\n                        : <Typography variant=\"h5\" align=\"right\" className=\"login-titleCard_actionCall\" gutterBottom>\n                            <Button variant=\"contained\" color=\"secondary\" onClick={this.props.login}>Sign in</Button>\n                            &nbsp;with Google\n                        </Typography>\n                    }\n                </div>\n            </Card>\n            {/* <Grid container justify={\"center\"} alignItems={\"center\"}>\n                <Grid item xs={12} lg={8}>\n                    <Card>\n                        <CardContent>\n                            <Typography variant=\"h5\">\n                                Welcome to Goaler\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            </Grid> */}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Login;","import React, { Component } from 'react';\nimport './loading.css';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nclass Loading extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    render() {\n        return (\n            <React.Fragment>\n            {\n                this.props.status ? \n                    <div className=\"loading\">\n                        <CircularProgress color=\"secondary\" size={200}/>\n                    </div> :\n                    this.props.children\n            }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport LogoIcon from '@material-ui/icons/Beenhere';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { withTheme } from '@material-ui/core/styles';\nimport './header.css';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header>\n                <AppBar position=\"static\" className=\"header\" \n                    style={{backgroundColor: this.props.theme.palette.primary.main + '80' }}>\n                    <Toolbar className=\"row\">\n                        <Link to=\"/\">\n                            <Button color=\"inherit\" aria-label=\"Logo\">\n                                <LogoIcon />\n                                <Typography variant=\"h6\" color=\"inherit\">\n                                    Goaler\n                                </Typography>\n                            </Button>\n                        </Link>\n                        <div>\n                        {\n                            this.props.user\n                            ? <IconButton color=\"inherit\" onClick={this.props.toggleDrawer}>\n                                <MenuIcon />\n                            </IconButton>\n                            : <Button color=\"inherit\" onClick={this.props.login}>Sign In</Button>\n                        }\n                        </div>\n                    </Toolbar>\n                </AppBar>\n            </header>\n        )\n    }\n}\n\nexport default withTheme()(Header);","import React, { Component } from 'react'\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ExitIcon from '@material-ui/icons/ExitToApp'\nimport SettingsIcon from '@material-ui/icons/Settings'\nimport GoalsIcon from '@material-ui/icons/DoneAll'\nimport InfoIcon from '@material-ui/icons/Info'\nimport HomeIcon from '@material-ui/icons/Home'\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { withRouter } from 'react-router-dom';\nimport './mainmenu.css'\n\nclass MainMenu extends Component {\n    // constructor(props) {\n    //     super(props);\n    // }\n\n    navigate = route => {\n        this.props.history.push(route);\n        this.props.toggleDrawer();\n    }\n\n    render() {\n        return (\n            <List className=\"mainmenu\">\n                <ListItem button onClick={() => this.navigate('/login')}>\n                    <ListItemIcon>\n                        <HomeIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Home\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/')}>\n                    <ListItemIcon>\n                        <GoalsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Goals\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/about')}>\n                    <ListItemIcon>\n                        <InfoIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"About\" />\n                </ListItem>\n                <ListItem button onClick={() => this.navigate('/settings')}>\n                    <ListItemIcon>\n                        <SettingsIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Settings\" />\n                </ListItem>\n                <Divider/>\n                <ListItem button onClick={this.props.logout}>\n                    <ListItemIcon>\n                        <ExitIcon/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"Sign Out\" />\n                </ListItem>\n            </List>\n        )\n    }\n}\n\nexport default withRouter(MainMenu);","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Icon from '@material-ui/icons/AddAlarm'\nimport { withTheme } from '@material-ui/core/styles'\nimport { withFirebase } from '../Firebase';\nimport './goalform.css';\n\nclass GoalForm extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props)\n    this.now = new Date();\n    const plusOneDay = new Date(this.now.getTime() + (1000 * 60 * 60 * 24));\n    const leadingZero = num => num < 10 ? \"0\" + num : num\n    const tomorrow = `${plusOneDay.getFullYear()}-${leadingZero(plusOneDay.getMonth() + 1)}-${leadingZero(plusOneDay.getDate())}`\n    this.today = `${this.now.getFullYear()}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n    this.maxDate = `${this.now.getFullYear() + 10}-${leadingZero(this.now.getMonth() + 1)}-${leadingZero(this.now.getDate())}`\n    this.currentTime = `${leadingZero(this.now.getHours())}:${leadingZero(this.now.getMinutes())}`;\n    let initialState;\n    if (this.props.initialState && this.props.initialState.date) {\n      const milliseconds = this.props.initialState.date;\n      let date = tomorrow;\n      let time = this.currentTime;\n      if (milliseconds > this.now.getTime()) {\n        const d = new Date(milliseconds);\n        date = `${d.getFullYear()}-${leadingZero(d.getMonth() + 1)}-${leadingZero(d.getDate())}`\n        time = `${leadingZero(d.getHours())}:${leadingZero(d.getMinutes())}`;\n      }\n      initialState = {\n        name: this.props.initialState.goal,\n        nameErr: false,\n        nameHelper: \"\",\n        date,\n        dateErr: false,\n        dateHelper: \"\",\n        time,\n        timeErr: false,\n        timeHelper: \"\",\n        multigoal: this.props.initialState.multigoal ? true : false,\n        subgoal: this.props.initialState.subgoal ? true : false,\n        timedgoal: this.props.initialState.timedgoal ? true : false,\n      }\n    } else {\n      initialState = {\n        name: \"\",\n        nameErr: false,\n        nameHelper: \"\",\n        date: tomorrow,\n        dateErr: false,\n        dateHelper: \"\",\n        time: this.currentTime,\n        timeErr: false,\n        timeHelper: \"\",\n        multigoal: this.props.initialState && this.props.initialState.multigoal\n          ? true : false,\n        subgoal: this.props.initialState && this.props.initialState.subgoal\n          ? true : false,\n        timedgoal: this.props.initialState && this.props.initialState.timedgoal\n          ? true : false\n      }\n    }\n    this.state = initialState;\n    // console.log(this.state)\n  }\n\n  toggleMultigoal = () => {\n    this.setState({\n      multigoal: !this.state.multigoal\n    })\n  }\n\n  toggleTimedgoal = () => {\n    this.setState({\n      timedgoal: !this.state.timedgoal\n    })\n  }\n\n  handleChange = name => event => {\n    this.setState({\n      [name]: event.target.value,\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.name !== this.state.name ||\n      prevState.date !== this.state.date ||\n      prevState.time !== this.state.time) {\n      this.validate();\n    }\n  }\n\n  validate = () => {\n    //check if name\n    let nameErr = false;\n    let nameHelper = \"\";\n    let dateErr = false;\n    let dateHelper = \"\";\n    let timeErr = false;\n    let timeHelper = \"\";\n    if (!this.state.name) {\n      nameErr = true;\n      nameHelper = \"Please set a goal\";\n    }\n    //check if date\n    if (!this.state.date) {\n      dateErr = true;\n      dateHelper = \"Please set a date\";\n    }\n    //check if time\n    if (!this.state.time) {\n      timeErr = true;\n      timeHelper = \"Please set a time\";\n    }\n    //get current date and time when form submits\n    const now = new Date();\n    const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/).map(str => Number(str));\n    dateArgs[1]--; //month is 0 indexed\n    const datetime = new Date(...dateArgs);\n    // check if time/date is > now\n    if (datetime.getTime() < now.getTime()) {\n      if (datetime.toDateString() !== now.toDateString()) {\n        dateErr = true;\n        dateHelper = \"Date must be in future\";\n      } else {\n        timeErr = true;\n        timeHelper = \"Time must be in future\";\n      }\n    }\n    this.setState({\n      nameErr,\n      nameHelper,\n      dateErr,\n      dateHelper,\n      timeErr,\n      timeHelper,\n    })\n    if (timeErr || dateErr || nameErr) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  handleSubmit = () => {\n    if (this.validate()) return;\n    const dateArgs = `${this.state.date} ${this.state.time}`.split(/[- :]/)\n      .map(str => Number(str));\n    dateArgs[1]--; //month is 0 indexed\n    const d = new Date(...dateArgs);\n    const now = new Date();\n    const n = now.getTime();\n    if (this.props.initialState && this.props.initialState.goal) {\n      if (this.state.subgoal) {\n        // console.log(`updating sub goal`, this.state, this.props)\n        this.props.firebase.goalsRef\n          .doc(this.props.initialState.parentGoalId)\n          .collection('subgoals')\n          .doc(this.props.initialState.id)\n          .update({\n            goal: this.state.name,\n            date: d.getTime(),\n            multigoal: this.state.multigoal,\n            subgoal: this.state.subgoal,\n            timedgoal: this.state.timedgoal,\n            completed: false,\n            updatedAt: n\n          })\n          .then(() => {\n            this.props.toggleModal();\n            // this.props.initialState.closeMenu();\n          })\n      } else {\n        // console.log(`updating regular goal`, this.state, this.props)\n        this.props.firebase.goalsRef\n          .doc(this.props.initialState.id)\n          .update({\n            goal: this.state.name,\n            date: d.getTime(),\n            multigoal: this.state.multigoal,\n            subgoal: this.state.subgoal,\n            timedgoal: this.state.timedgoal,\n            completed: false,\n            updatedAt: n\n          })\n          .then(() => {\n            this.props.toggleModal();\n            // this.props.initialState.closeMenu();\n          })\n      }\n    } else if (!this.state.subgoal) {\n      // console.log(`Adding regular goal`, this.state, this.props)\n      this.props.firebase.goalsRef.add({\n        goal: this.state.name,\n        date: d.getTime(),\n        multigoal: this.state.multigoal,\n        subgoal: this.state.subgoal,\n        timedgoal: this.state.timedgoal,\n        completed: false,\n        createdAt: n,\n        updatedAt: n\n      })\n        .then(() => {\n          this.props.toggleModal();\n        })\n    } else {\n      // console.log(`Adding subgoal`, this.state, this.props)\n      this.props.firebase.goalsRef\n        .doc(this.props.initialState.parentGoalId)\n        .collection('subgoals').add({\n          goal: this.state.name,\n          date: d.getTime(),\n          multigoal: this.state.multigoal,\n          subgoal: this.state.subgoal,\n          timedgoal: this.state.timedgoal,\n          completed: false,\n          createdAt: n,\n          updatedAt: n\n        })\n        .then(() => {\n          this.props.toggleModal();\n        })\n    }\n\n  }\n\n  render() {\n    return (\n      <Card className=\"goalform\">\n        <CardHeader\n          avatar={\n            <Avatar\n              style={{\n                backgroundColor: this.props.theme.palette.secondary.main,\n                color: this.props.theme.palette.text.primary\n              }}>\n              <Icon />\n            </Avatar>\n          }\n          title=\"Add a goal\"\n          // subheader=\"With Chocolates\"\n          action={\n            <IconButton onClick={this.props.toggleModal} tabIndex={-1}>\n              <CloseIcon />\n            </IconButton>\n          }\n        />\n        <CardContent>\n          <Grid container spacing={0}>\n            <Grid item xs={12}>\n              <TextField\n                label=\"Goal\"\n                placeholder=\"Make it a good one!\"\n                error={this.state.nameErr}\n                value={this.state.name}\n                onChange={this.handleChange('name')}\n                fullWidth\n                margin=\"normal\"\n                helperText={this.state.nameHelper}\n              />\n            </Grid>\n            { this.state.timedgoal &&\n              <>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    label=\"Due Date\"\n                    error={this.state.dateErr}\n                    type=\"date\"\n                    value={this.state.date}\n                    onChange={this.handleChange('date')}\n                    margin=\"normal\"\n                    fullWidth\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                    helperText={this.state.dateHelper}\n                    InputProps={{\n                      inputProps: {\n                        min: this.today,\n                        max: this.maxDate\n                      }\n                    }}\n                  />\n                </Grid>\n                <Grid item xs={12} md={6}>\n                  <TextField\n                    label=\"Due Time\"\n                    error={this.state.timeErr}\n                    type=\"time\"\n                    value={this.state.time}\n                    onChange={this.handleChange('time')}\n                    margin=\"normal\"\n                    fullWidth\n                    helperText={this.state.timeHelper}\n                    InputLabelProps={{\n                      shrink: true,\n                    }}\n                  />\n                </Grid>\n              </>\n            }\n            <Grid item xs={12} md={6}>\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Switch\n                      checked={this.state.timedgoal}\n                      onChange={this.toggleTimedgoal}\n                      value={this.state.timedgoal}\n                    />\n                  }\n                  label={\n                    <Typography color={\n                      this.state.timedgoal\n                        ? \"textPrimary\"\n                        : \"textSecondary\"\n                    }>\n                      Timed Goal\n                    </Typography>\n                  } />\n                {\n                  !this.state.subgoal && !this.props.initialState.subgoalsAdded &&\n                  <FormControlLabel\n                    control={\n                      <Switch\n                        checked={this.state.multigoal}\n                        onChange={this.toggleMultigoal}\n                        value={this.state.multigoal}\n                      />\n                    }\n                    label={\n                      <Typography color={\n                        this.state.multigoal\n                          ? \"textPrimary\"\n                          : \"textSecondary\"\n                      }>\n                        Multi-Step Goal\n                      </Typography>\n                    } />\n                }\n              </FormGroup>\n            </Grid>\n          </Grid>\n        </CardContent>\n        <CardActions className=\"row right\">\n          <Button onClick={this.handleSubmit}>\n            {\n              this.props.initialState && this.props.initialState.goal\n                ? \"Update \" : \"Add \"\n            }\n            Goal\n          </Button>\n          <Button onClick={this.props.toggleModal}>Cancel</Button>\n        </CardActions>\n      </Card>\n    )\n  }\n}\n\nexport default withTheme()(withFirebase(GoalForm));","import React from 'react';\nimport './timer.css';\nclass Timer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unMounting = false;\n        const timeRemaining = this.checkTime();\n        this.state = {\n            time: {},\n            counting: timeRemaining > 0 ? true : false,\n            classes: \"\"\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.date !== this.props.date) {\n            this.updateTime();\n        }\n    }\n    componentDidMount() {\n        if (this.props.date /* && this.state.counting */) {\n            this.updateTime();\n        }\n    }\n    checkTime = () => {\n        const future = this.props.date;\n        const d = new Date();\n        const now = d.getTime();\n        const timeRemaining = future - now;\n        return timeRemaining;\n    }\n    updateTime = () => {\n        if (this.unMounting) return;\n        // var future = Date.parse(\"December 31, 2019\");\n        let timeRemaining = this.checkTime();\n        let counting;\n        timeRemaining < 0 ? counting = false : counting = true;\n        timeRemaining = Math.abs(timeRemaining);\n        // console.log(timeRemaining)\n        // if (timeRemaining < 1000) {\n        //     return this.setState({\n        //         time: {\n        //             days: \"00\",\n        //             hours: \"00\",\n        //             minutes: \"00\",\n        //             seconds: \"00\"\n        //         },\n        //         counting: false,\n        //         // classes: \"timer-strike_animate\"\n        //     });\n        // }\n        let seconds = Math.floor(timeRemaining / 1000) % 60;\n        let minutes = Math.floor((timeRemaining / 1000) / 60) % 60;\n        let hours = Math.floor((timeRemaining / 1000) / 3600) % 24;\n        let days = Math.floor(((timeRemaining / 1000) / 3600) / 24);\n        days = days < 10 ? '0' + days : days.toString();\n        hours = hours < 10 ? '0' + hours : hours.toString();\n        minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n        this.setState({\n            time: {\n                days, hours, minutes, seconds\n            },\n            counting: counting\n        });\n        requestAnimationFrame(this.updateTime);\n    }\n\n    componentWillUnmount() {\n        this.unMounting = true;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.counting\n                    ? <span className={this.state.classes}>\n                        Due in:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    : <span className=\"timer-strike\">\n                        Past Due:\n                        {` ${this.state.time.days}:` +\n                            `${this.state.time.hours}:` +\n                            `${this.state.time.minutes}:` +\n                            `${this.state.time.seconds}`}\n                    </span>\n                    // : <span className=\"timer-strike\">00:00:00:00</span>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Timer;","import React from 'react';\nimport './timedue.css'\n\nconst TimeDue = props => {\n    const ms = props.date;\n    const now = new Date();\n    const nowMs = now.getTime();\n    const diff = nowMs - ms;\n    const d = new Date(ms);\n    return (\n        <span className={diff > 0 ? \"timedue\" : \"\"}>Due: {d.toLocaleString()}</span>\n    )\n};\n\nexport default TimeDue;","import React, { Component } from 'react';\n\nclass TimeStamp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            created: \"\",\n            updated: \"\",\n            completed: \"\",\n            timeStatus: \"\"\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps !== this.props) {\n            this.updateTime();\n        }\n    }\n\n    componentDidMount() {\n        this.updateTime();\n    }\n\n    updateTime = () => {\n        const updated = new Date(this.props.updated);\n        const created = new Date(this.props.created);\n        const completed = new Date(this.props.completed);\n        if (this.props.completed) {\n            this.setState({\n                timeStatus: \"completed\",\n                completed: \"Done: \" + completed.toLocaleString()\n            })\n        } else if (this.props.updated === this.props.created) {\n            this.setState({\n                timeStatus: \"created\",\n                created: \"Created: \" + created.toLocaleString()\n            });\n        } else {\n            this.setState({\n                timeStatus: \"updated\",\n                updated: \"Updated: \" + updated.toLocaleString(),\n                created: \"Created: \" + created.toLocaleString()\n            });\n        }\n    }\n\n    renderSpans = () => {\n        //if created\n        switch(this.state.timeStatus) {\n            case 'completed':\n                return (\n                    <span>{this.state.completed}</span>\n                )\n            case 'created':\n                return (\n                    <span>{this.state.created}</span>\n                )\n            case 'updated':\n                return (\n                    <React.Fragment>\n                        {/* <span>{this.state.created}</span><br/> */}\n                        <span>{this.state.updated}</span>\n                    </React.Fragment>\n                )\n            default:\n                return;\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.renderSpans()}\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimeStamp;","import React, { Component } from 'react';\n\nclass TimerCompleted extends Component {\n    constructor(props) {\n        super(props);\n        const completed = props.completed;\n        const updated = props.updated;\n        const completionTime = completed - updated;\n        let seconds = Math.round(completionTime / 1000) % 60;\n        let minutes = Math.floor((completionTime / 1000) / 60) % 60;\n        let hours = Math.floor((completionTime / 1000) / 3600) % 24;\n        let days = Math.floor(((completionTime / 1000) / 3600) / 24);\n        this.days = days < 10 ? '0' + days : days.toString();\n        this.hours = hours < 10 ? '0' + hours : hours.toString();\n        this.minutes = minutes < 10 ? '0' + minutes : minutes.toString();\n        this.seconds = seconds < 10 ? '0' + seconds : seconds.toString();\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <span>{`Time: ${this.days}:${this.hours}:${this.minutes}:${this.seconds}`}</span><br/>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default TimerCompleted;","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './goalitem.css';\n\nclass GoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n\n    componentDidMount() {\n        if (this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"I rendered with\", {props: this.props})\n        if (prevProps.deleteSelf !== this.props.deleteSelf && this.props.deleteSelf) {\n            this.goalRef.delete();\n        }\n    }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        const d = new Date();\n        const ms = d.getTime();\n        const newCompletedStatus = !this.props.goal.completed\n        this.goalRef.update({\n            completed: newCompletedStatus,\n            completedAt: newCompletedStatus ? ms : null\n        });\n        const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        countRef.get().then(doc => {\n            const data = doc.data();\n            let newCount;\n            newCompletedStatus\n                ? newCount = data.count + 1\n                : newCount = data.count - 1;\n            if (newCount < 0) newCount = 0;\n            countRef.set({\n                count: newCount,\n                enabled: data.enabled\n            });\n        });\n\n    }\n    triggerModal = (subgoal, type) => {\n        let modalToggleFn;\n        switch(type) {\n            case 'edit':\n                modalToggleFn = this.props.toggleModal;\n                break;\n            case 'repeat':\n                modalToggleFn = this.props.toggleRepeatModal;\n                break;\n            default:\n                return;\n        }\n        if (subgoal) {\n            // console.log(subgoal)\n            modalToggleFn({\n                parentGoalName: this.props.parentGoal.goal,\n                parentGoalDate: this.props.parentGoal.date,\n                parentGoalId: this.props.parentGoal.id,\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        } else {\n            modalToggleFn({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n\n    handleDelete = () =>{\n        this.goalRef.delete();\n        this.handleClose();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalItem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        // className={}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : this.props.goal.timedgoal && <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        // className={this.props.goal.completed ? \"goalitem-strike\" : \"\"}\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.createdAt}/>\n                            </React.Fragment>\n                            : this.props.goal.timedgoal && <React.Fragment>\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimeDue date={this.props.goal.date}/><br/>\n                            </React.Fragment>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        <IconButton onClick={this.handleCompleteToggle}>\n                            {\n                                this.props.goal.completed\n                                ? <CheckBoxIcon color=\"secondary\"/>\n                                : <CheckBoxOutlineBlankIcon />\n                            }\n                        </IconButton>\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem\n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"edit\")}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            {\n                                this.props.goal.completed &&\n                                <MenuItem\n                                    onClick={() => this.triggerModal(this.props.goal.subgoal, \"repeat\")}>\n                                    <ListItemIcon>\n                                        <ReplayIcon color=\"error\" />\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Repeat\"/>\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(GoalItem));","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Avatar from '@material-ui/core/Avatar';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Chip from '@material-ui/core/Chip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport AlarmIcon from '@material-ui/icons/Alarm'\nimport CloseIcon from '@material-ui/icons/Close';\nimport ReplayIcon from '@material-ui/icons/Replay';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport TimeDue from './timedue';\nimport Timer from './timer';\nimport './repeatform.css'\n\nclass RepeatForm extends Component {\n    constructor(props) {\n        super(props)\n        const d = new Date();\n        this.state = {\n            now: d.getTime(),\n            value: (1000 * 60 * 60 * 24).toString(),\n            chip: true,\n            formError: false,\n            hours: \"1\",\n            hoursErr: false,\n            hoursErrMsg: \"\",\n            minutes: \"10\",\n            minutesErr: false,\n            minutesErrMsg: \"\",\n            days: \"1\",\n            daysErr: false,\n            daysErrMsg: \"\",\n            weeks: \"1\",\n            weeksErr: false,\n            weeksErrMsg: \"\",\n            goal: this.props.initialState.goal,\n            goalErr: false,\n            goalErrMsg: \"\"\n        }\n    }\n    handleText = event => {\n        const goal = event.target.value;\n        let goalErr, goalErrMsg, formError;\n        if (goal === \"\") {\n            goalErr = true;\n            goalErrMsg = \"Must have goal name\";\n            formError = true;\n        } else {\n            goalErr = false;\n            goalErrMsg = \"\";\n            formError = false;\n        }\n        this.setState({goal, goalErr, goalErrMsg, formError});\n    }\n\n    handleTime = event => {\n        const name = event.target.name;\n        let unit;\n        switch(name) {\n            case 'hours':\n                unit = 60;\n                break;\n            case 'minutes':\n                unit = 1;\n                break;\n            case 'days':\n                unit = 60 * 24;\n                break;\n            case 'weeks':\n                unit = 60 * 24 * 7;\n                break;\n            default:\n                break;\n        }\n        const num = Number(event.target.value)\n        let Err;\n        let ErrMsg;\n        let hasError = false;\n        if (num <= 0 || isNaN(num)) {\n            Err = true;\n            ErrMsg = \"Time > 0\"\n            hasError = true;\n        }\n        this.setState({\n            [name]: event.target.value,\n            [name + \"Err\"]: Err,\n            [ name + \"ErrMsg\"]: ErrMsg,\n            formError: hasError,\n            value: (1000 * 60 * unit * num).toString()\n        })\n    }\n\n    handleChange = event => {\n        const d = new Date();\n        const value = event.target.value;\n        this.setState({ \n            value,\n            now: d.getTime()\n        });\n    };\n\n    getMonth = months => {\n        const d = new Date();\n        const plusMonth = new Date();\n        plusMonth.setMonth(d.getMonth() + months);\n        let value = plusMonth.getTime() - d.getTime();\n        value = value.toString();\n        return value;\n    }\n\n    handleSubmit = () => {\n        const goal = this.props.initialState;\n        const collectionRef = goal.subgoal\n            ? this.props.firebase.goalsRef.doc(goal.parentGoalId).collection('subgoals')\n            : this.props.firebase.goalsRef\n        collectionRef.add({\n            goal: this.state.goal,\n            date: (+this.state.value) + this.state.now,\n            multigoal: goal.multigoal,\n            subgoal: goal.subgoal,\n            completed: false,\n            createdAt: this.state.now,\n            updatedAt: this.state.now\n        })\n        .then(() => {\n            this.props.toggleRepeatModal();\n        })\n    }\n\n    toggleChip = () => {\n        this.setState({chip: !this.state.chip})\n    }\n\n    resetBadFields = () => {\n        if (this.state.minutesErr) {\n            this.setState({\n                minutes: \"10\",\n                minutesErr: false,\n                minutesErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.hoursErr) {\n            this.setState({\n                hours: \"1\",\n                hoursErr: false,\n                hoursErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.daysErr) {\n            this.setState({\n                days: \"1\",\n                daysErr: false,\n                daysErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.weeksErr) {\n            this.setState({\n                weeks: \"1\",\n                weeksErr: false,\n                weeksErrMsg: \"\",\n                formError: false\n            });\n        }\n        if (this.state.goalErr) {\n            this.setState({\n                goal: this.props.initialState.goal,\n                goalErr: false,\n                goalErrMsg: \"\",\n                formError: false\n            });\n        }\n    }\n\n    render() {\n        return (\n            <Card className=\"goalform\">\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            style={{\n                                backgroundColor: this.props.theme.palette.secondary.main,\n                                color: this.props.theme.palette.text.primary\n                            }}>\n                            <ReplayIcon />\n                        </Avatar>\n                    }\n                    title=\"Repeat Goal:\"\n                    // subheader={this.state.goal}\n                    action={\n                        <IconButton onClick={this.props.toggleRepeatModal} tabIndex={-1}>\n                            <CloseIcon />\n                        </IconButton>\n                    }\n                />\n                <CardContent>\n                    <Grid container spacing={0}>\n                        <Grid item xs={12} className=\"repeatform-goalField\">\n                            <TextField\n                                error={this.state.goalErr}\n                                helperText={this.state.goalErrMsg}\n                                inputProps={{\n                                    step: 1,\n                                    min: 1,\n                                    required: true\n                                }}\n                                fullWidth\n                                // label=\"Goal\"\n                                name=\"goal\"\n                                value={this.state.goal}\n                                onBlur={this.resetBadFields}\n                                onChange={this.handleText}/>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <RadioGroup className=\"repeatform-buttonGrp\"\n                                row={true}\n                                aria-label=\"Repeat Time\"\n                                name=\"repeatTime\"\n                                value={this.state.value}\n                                onChange={this.handleChange}>\n                                <FormControlLabel value={(1000 * 60 * this.state.minutes).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.minutesErr}\n                                            helperText={this.state.minutesErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true,\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Minute{this.state.minutes === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"minutes\"\n                                            className=\"\"\n                                            value={this.state.minutes}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Minute{this.state.minutes === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * this.state.hours).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.hoursErr}\n                                            helperText={this.state.hoursErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Hour{this.state.hours === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"hours\"\n                                            className=\"\"\n                                            value={this.state.hours}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Hour{this.state.hours === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * this.state.days).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.daysErr}\n                                            helperText={this.state.daysErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Day{this.state.days === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"days\"\n                                            className=\"\"\n                                            value={this.state.days}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Day{this.state.days === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={(1000 * 60 * 60 * 24 * 7 * this.state.weeks).toString()} control={<Radio />} label={\n                                    <div className=\"repeatform-hourInput-wrapper\">\n                                        <TextField\n                                            classes={{root: \"repeatform-hourInput\"}}\n                                            type=\"number\"\n                                            error={this.state.weeksErr}\n                                            helperText={this.state.weeksErrMsg}\n                                            inputProps={{\n                                                step: 1,\n                                                min: 1,\n                                                required: true\n                                            }}\n                                            InputProps={{\n                                                endAdornment: \n                                                <InputAdornment position=\"end\">\n                                                    Week{this.state.weeks === \"1\" ? '' : 's'}\n                                                </InputAdornment>\n                                            }}\n                                            // label=\"Hours\"\n                                            name=\"weeks\"\n                                            className=\"\"\n                                            value={this.state.weeks}\n                                            onBlur={this.resetBadFields}\n                                            onChange={this.handleTime}/>\n                                            {/* <span>Week{this.state.weeks === \"1\" ? '' : 's'}</span> */}\n                                    </div>\n                                } />\n                                <FormControlLabel value={this.getMonth(1)} control={<Radio />} label=\"One Month\" />\n                                <FormControlLabel value={this.getMonth(12)} control={<Radio />} label=\"One Year\" />\n                            </RadioGroup>\n                        </Grid>\n                        <Grid item xs={12} className=\"repeatform-chipWrapper\">\n                            <Chip tabIndex={-1}\n                                color={this.state.chip ? \"primary\" : \"secondary\"}\n                                icon={<AlarmIcon/>}\n                                onClick={this.toggleChip}\n                                label={\n                                    this.state.chip\n                                    ? <TimeDue date={this.state.now + (+this.state.value)}/>\n                                    : <Timer date={this.state.now + (+this.state.value)}/> \n                                    }\n                                />\n                        </Grid>\n                    </Grid>\n                </CardContent>\n                <CardActions className=\"row right\">\n                    <Button disabled={this.state.formError || +this.state.value === 0} onClick={this.handleSubmit}>\n                        Submit\n                    </Button>\n                    <Button onClick={this.props.toggleRepeatModal}>Cancel</Button>\n                </CardActions>\n            </Card>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(RepeatForm));","import React, { Component } from 'react';\nimport List from '@material-ui/core/List';\nimport Collapse from '@material-ui/core/Collapse';\nimport GoalItem from './goalitem';\nimport { withFirebase } from '../Firebase';\n\nclass MultiGoalList extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            subgoals: []\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.deleteInProgress && this.state.subgoals.length === 0) {\n            this.props.deleteParent();\n        }\n    }\n\n    componentDidMount() {\n        this.props.firebase.db\n            .collection(`users/${this.props.user.uid}/goals/${this.props.parentGoal.id}/subgoals`)\n            .onSnapshot((snapshot) => {\n                const subgoals = [];\n                snapshot.forEach(doc => subgoals.push({ id: doc.id, ...doc.data() }))\n                const completed = subgoals.filter(goal => goal.completed);\n                const completePercentage = Math.round(completed.length / subgoals.length * 100);\n                this.props.updateProgress(completePercentage);\n                this.setState({ subgoals });\n            })\n    }\n\n    render() {\n        return (\n            <Collapse in={this.props.open} timeout=\"auto\" unmountOnExit>\n                <List component=\"div\" disablePadding>\n                    {\n                        this.state.subgoals\n                            .sort((goalA, goalB) => {\n                              const diff = goalA.date - goalB.date\n                              if (goalA.completed === goalB.completed && goalA.timedgoal && goalB.timedgoal) {\n                                  return diff;\n                              } else if (goalA.completed === goalB.completed && goalA.timedgoal !== goalB.timedgoal) {\n                                  return goalA.timedgoal ? -1 : 1\n                              } else if (goalA.completed && !goalB.completed) {\n                                return 1;\n                              } else if (!goalA.completed && goalB.completed){\n                                  return -1;\n                              } else {\n                                return diff;\n                              }\n                            })\n                            .map(goal => (\n                                <GoalItem key={goal.id} goal={goal}\n                                    toggleModal={this.props.toggleModal}\n                                    toggleRepeatModal={this.props.toggleRepeatModal}\n                                    parentGoal={this.props.parentGoal}\n                                    deleteSelf={this.props.deleteInProgress}/>\n                            ))\n                    }\n                </List>\n            </Collapse>\n        );\n    }\n}\n\nexport default withFirebase(MultiGoalList);","import React, { Component } from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport LinearProgress from '@material-ui/core/LinearProgress';\n// import CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\n// import CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport { withTheme } from '@material-ui/core/styles';\nimport { withFirebase } from '../Firebase';\nimport MultiGoalList from './multigoallist';\nimport Timer from './timer';\nimport TimeDue from './timedue';\nimport TimeStamp from './timestamp';\nimport TimerCompleted from './timercompleted';\nimport './multigoalitem.css';\n\nclass MultiGoalItem extends Component {\n    constructor(props) {\n        super(props);\n        // console.log(props)\n        this.state = {\n            anchorEl: null,\n            timeView: true,\n            subgoalsOpen: props.goal.multigoal ? false : null,\n            progress: 0,\n            subgoalsAdded: false,\n            loading: true,\n            deleteInProgress: false,\n        };\n        this.goalRef = props.goal.subgoal\n        ? props.firebase.goalsRef.doc(`${props.parentGoal.id}/subgoals/${props.goal.id}`)\n        : props.firebase.goalsRef.doc(props.goal.id);\n    }\n    // componentDidUpdate() {\n    //     console.log(\"I rendered with\", {props: this.props})\n    // }\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCompleteToggle = () => {\n        if (document.hidden) { return; }\n        // if (this.props.goal.metadata.fromCache) return;\n        if ((this.state.progress === 100 && !this.props.goal.completed) ||\n        (this.state.progress !== 100 && this.props.goal.completed)) {\n            const d = new Date();\n            const ms = d.getTime();\n            const newCompletedStatus = !this.props.goal.completed\n            this.goalRef.update({\n                completed: newCompletedStatus,\n                completedAt: newCompletedStatus ? ms : null\n            });\n        }\n        // const countRef = this.props.firebase.settingsRef.doc('completedCount');\n        // countRef.get().then(doc => {\n        //     const data = doc.data();\n        //     let newCount;\n        //     newCompletedStatus\n        //         ? newCount = data.count + 1\n        //         : newCount = data.count - 1\n        //     if (newCount < 0) newCount = 0;\n        //     countRef.set({\n        //         count: newCount\n        //     })\n        // })\n\n    }\n    triggerModal = (subgoal) => {\n        if (subgoal) {\n            // console.log(subgoal)\n            this.props.toggleModal({\n                parentGoalName: this.props.goal.goal,\n                parentGoalDate: this.props.goal.date,\n                parentGoalId: this.props.goal.id,\n                multigoal: false,\n                subgoal: true,\n                subgoalsAdded: this.state.subgoalsAdded,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        } else {\n            this.props.toggleModal({\n                goal: this.props.goal.goal,\n                date: this.props.goal.date,\n                id: this.props.goal.id,\n                multigoal: this.props.goal.multigoal,\n                subgoal: this.props.goal.subgoal,\n                subgoalsAdded: this.state.subgoalsAdded,\n                timedgoal: this.props.goal.timedgoal,\n                // closeMenu: this.handleClose\n            })\n        }\n        this.handleClose();\n    }\n    startDelete = () => {\n        // this.goalRef.delete();\n        this.setState({\n            subgoalsOpen: true,\n            deleteInProgress: true,\n        })\n        this.handleClose();\n    }\n\n    finishDelete = () => {\n        this.goalRef.delete();\n    }\n\n    toggleTimeView = () => {\n        this.setState({\n            timeView: !this.state.timeView\n        })\n    }\n    toggleSubgoals = () => {\n        this.setState({\n            subgoalsOpen: !this.state.subgoalsOpen\n        })\n    }\n\n    updateProgress = newPercentage => {\n        // console.log(newPercentage)\n        this.setState({\n            progress: newPercentage,\n            subgoalsAdded: isNaN(newPercentage) ? false : true,\n            loading: false\n        });\n        if (newPercentage === 100 && !this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        } else if (newPercentage !== 100 && this.props.goal.completed) {\n            setTimeout(() => this.handleCompleteToggle(), 500)\n            // this.handleCompleteToggle();\n        }\n    }\n\n    render() {\n        const { anchorEl } = this.state;\n        const open = Boolean(anchorEl);\n        return (\n            <React.Fragment>\n                <ListItem className={this.props.goal.subgoal ? \"goalitem-indent\" : \"\"}\n                    button onClick={this.toggleTimeView}>\n                    {\n                        this.state.timeView\n                        ? <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <TimeStamp completed={this.props.goal.completedAt} />\n                            : this.props.goal.timedgoal && <Timer date={this.props.goal.date} />\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n                        : <ListItemText\n                        primary={this.props.goal.goal}\n                        secondary={this.props.goal.completed\n                            ? <React.Fragment>\n                                {/* <TimeStamp completed={this.props.goal.completedAt} /><br/> */}\n                                {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                <TimerCompleted completed={this.props.goal.completedAt} updated={this.props.goal.createdAt}/>\n                            </React.Fragment>\n                            : this.props.goal.timedgoal\n                              ? <React.Fragment>\n                                  {/* <TimeStamp updated={this.props.goal.updatedAt} created={this.props.goal.createdAt}/><br/> */}\n                                  <TimeDue date={this.props.goal.date}/><br/>\n                              </React.Fragment>\n                              : <span>{this.state.progress}% Complete</span>\n                        }\n                        primaryTypographyProps={{\n                            style: { width: '80%' },\n                            className: this.props.goal.completed ? \"goalitem-strike\" : \"\"\n                        }}\n                        secondaryTypographyProps={{ color: 'error' }}\n                        />\n\n                    }\n                    <ListItemSecondaryAction>\n                        {\n                            this.state.subgoalsAdded\n                            ? !this.state.loading &&\n                            <IconButton onClick={this.toggleSubgoals}>\n                                {\n                                    this.state.subgoalsOpen\n                                    ? <ExpandLess/>\n                                    : <ExpandMore/>\n                                }\n                            </IconButton>\n                            : !this.state.loading &&\n                            <IconButton variant=\"raised\"\n                                onClick={() => this.triggerModal(true)}>\n                                <AddIcon />\n                            </IconButton>\n                        }\n                        <IconButton onClick={this.handleMenuClick}>\n                            <MoreVertIcon />\n                        </IconButton>\n                        <Menu\n                            id=\"long-menu\"\n                            anchorEl={anchorEl}\n                            open={open}\n                            onClose={this.handleClose}>\n                            {\n                                this.props.goal.multigoal &&\n                                //trigger modal with subgoal flag\n                                <MenuItem onClick={() => this.triggerModal(true)}>\n                                    <ListItemIcon>\n                                        <AddIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Add Sub Goal\" />\n                                </MenuItem>\n                            }\n                            {\n                                !this.props.goal.completed &&\n                                <MenuItem onClick={() => this.triggerModal(false)}>\n                                    <ListItemIcon>\n                                        <EditIcon color={'inherit'}/>\n                                    </ListItemIcon>\n                                    <ListItemText inset primary=\"Edit\" />\n                                </MenuItem>\n                            }\n                            <MenuItem onClick={this.startDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon nativeColor={this.props.theme.palette.warn[500]}/>\n                                </ListItemIcon>\n                                <ListItemText inset primary=\"Delete\" />\n                            </MenuItem>\n                        </Menu>\n                    </ListItemSecondaryAction>\n                </ListItem>\n                {\n                    !this.state.loading && this.state.subgoalsAdded &&\n                    <LinearProgress className=\"goalItem-progress\"\n                        color=\"secondary\" variant=\"determinate\" value={this.state.progress} />\n                }\n                {\n                    this.props.goal.multigoal &&\n                    <MultiGoalList\n                        open={this.state.subgoalsOpen}\n                        parentGoal={this.props.goal}\n                        user={this.props.user}\n                        toggleModal={this.props.toggleModal}\n                        toggleRepeatModal={this.props.toggleRepeatModal}\n                        updateProgress={this.updateProgress}\n                        deleteParent={this.finishDelete}\n                        deleteInProgress={this.state.deleteInProgress}/>\n                }\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withTheme()(withFirebase(MultiGoalItem));","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\n\nclass Clock extends Component {\n    constructor(props) {\n        super(props);\n        this.d = new Date();\n        this.options = {\n            weekday: 'short',\n            year: 'numeric',\n            month: 'numeric',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n        }\n        this.state = {\n            time: this.d.toLocaleString('en-US', this.options)\n        }\n    }\n\n    componentDidMount() {\n        this.update();\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    update = () => {\n        if(this.unmounting) return;\n        const d = new Date();\n        const newTime = d.toLocaleString('en-US', this.options);\n        if(newTime !== this.state.time) {\n            this.setState({\n                time: newTime\n            })\n        }\n        requestAnimationFrame(this.update);\n    }\n\n    render() {\n        return (\n            <Chip color=\"secondary\" label={this.state.time} />\n        )\n    }\n}\n\nexport default Clock;","import React, {Component} from 'react'\nimport Chip from '@material-ui/core/Chip';\nimport { withFirebase } from '../Firebase';\nclass CompletedCounter extends Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {completeCount: \"\"}\n        // console.log(props)\n    }\n\n    componentDidMount() {\n        const completedRef = this.props.firebase.db.collection(`users/${this.props.uid}/settings`)\n        .doc('completedCount');\n\n        completedRef.onSnapshot(snapshot => {\n            const data = snapshot.data()\n            if (!this.unmounting) {\n                this.setState({ completeCount: data.count })\n            }\n        })\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    render() {\n        return (\n            <Chip color=\"primary\" label={`Completed Goals: ${this.state.completeCount}`} />\n        )\n    }\n}\n\nexport default withFirebase(CompletedCounter);","import React from 'react';\nimport Modal from '@material-ui/core/Modal';\nimport './centeredModal.css';\n\nexport default ({children: Children, ...rest}) => (\n    <Modal {...rest} className=\"centeredModal\">{Children}</Modal>\n);\n","import React, { Component } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport './settings.css';\nimport Loading from '../loading/loading';\nimport CompletedCounter from '../dashboard/completedcounter';\nimport Clock from '../dashboard/clock';\nimport { withFirebase } from '../Firebase';\n\nfunction initializeSettings(settingsRef) {\n    settingsRef.doc('completedCount').set({ count: 0, enabled: true });\n    settingsRef.doc('clock').set({ enabled: true });\n}\n\nfunction getNewBackground(settingsRef) {\n    fetch('https://picsum.photos/g/1920/1200/?random')\n    .then(res => {\n        if (res.status === 200) {\n            document.body.style.backgroundImage = `url(${res.url})`\n            settingsRef.doc('background').set({ url: res.url });\n        } else {\n            document.body.style.backgroundImage = 'none'\n        }\n    });\n}\n\nclass Settings extends Component {\n\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        this.state = {\n            loading: true,\n            settings: {}\n        }\n    }\n\n    componentDidMount() {\n        this.settingsRef.onSnapshot((snapshot) => {\n            const settings = {};\n            // snapshot.forEach(doc => settings.push({id: doc.id, ...doc.data()}))\n            snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n            if (!this.unmounting) {\n                this.setState({settings, loading: false});\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n\n    toggleEnableSwitch = setting => {\n        this.settingsRef.doc(setting).update({ enabled: !this.state.settings[setting].enabled})\n    }\n\n    render() {\n        return (\n        <Loading status={this.state.loading}>\n            <div className=\"settings-wrapper\">\n                {/* <h1>{JSON.stringify(this.state.settings)}</h1> */}\n                <Typography variant=\"h4\" align=\"center\" className=\"settings-title\">\n                    Settings\n                </Typography>\n                <form>\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Completed Goals Counter\n                                </Typography>\n                                <CompletedCounter uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.completedCount &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.completedCount.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.completedCount.id)}\n                                                value={this.state.settings.completedCount.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.completedCount.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Complete Counter\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Clock\n                                </Typography>\n                                <Clock uid={this.props.user.uid} />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    this.state.settings.clock &&\n                                    <FormGroup row>\n                                        <FormControlLabel\n                                            control={\n                                                <Switch\n                                                checked={this.state.settings.clock.enabled}\n                                                onChange={() => this.toggleEnableSwitch(this.state.settings.clock.id)}\n                                                value={this.state.settings.clock.enabled}\n                                                />\n                                            }\n                                            label={\n                                                <Typography color={\n                                                    this.state.settings.clock.enabled\n                                                    ? \"textPrimary\"\n                                                    : \"textSecondary\"\n                                                }>\n                                                    Enable Clock\n                                                </Typography>\n                                            }/>\n                                    </FormGroup>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                    <Divider variant='middle' />\n                    <Grid container justify=\"center\" className=\"settings__setting-row\">\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                <Typography variant=\"h6\">\n                                    Background\n                                </Typography>\n                            </div>\n                        </Grid>\n                        <Grid item xs={12} md={6}>\n                            <div className=\"settings__column-wrapper--center\">\n                                {\n                                    // this.state.settings.background &&\n                                    true &&\n                                    <Button variant=\"contained\" color=\"primary\" onClick={() => getNewBackground(this.settingsRef)}>\n                                        Shuffle Background\n                                    </Button>\n                                }\n                            </div>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n        </Loading>\n        )\n    }\n}\n\nexport default withFirebase(Settings);\n\nexport { initializeSettings, getNewBackground };","import Dashboard from './dashboard';\nimport Goalform from './goalform';\nimport CenteredModal from './centeredModal';\n\nexport { Goalform, CenteredModal };\nexport default Dashboard;","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport List from '@material-ui/core/List';\nimport GoalForm from './goalform';\nimport GoalItem from './goalitem';\nimport RepeatForm from './repeatform';\nimport MultiGoalItem from './multigoalitem';\nimport Clock from './clock';\nimport CompletedCounter from './completedcounter';\nimport CenteredModal from './centeredModal';\nimport { withFirebase } from '../Firebase';\nimport { initializeSettings, getNewBackground } from '../settings/settings';\nimport './dashboard.css';\n\nclass Dashboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.unmounting = false;\n        this.state = {\n            goalModalOpen: false,\n            repeatModalOpen: false,\n            modalState: undefined,\n            repeatModalState: undefined,\n            goals: [],\n            settings: {},\n            settingsLoaded: false,\n        };\n    }\n    componentDidMount = () => {\n        this.props.firebase.db.collection(`users/${this.props.user.uid}/goals`)\n        .onSnapshot((snapshot) => {\n            const goals = [];\n            snapshot.forEach(doc => goals.push({id: doc.id, ...doc.data()}))\n            this.setState({goals});\n        })\n        const settingsRef = this.props.firebase.db.collection(`users/${this.props.user.uid}/settings`);\n        settingsRef.onSnapshot((snapshot) => {\n            // console.log(snapshot)\n            if (!snapshot.empty) {\n                const settings = {};\n                // snapshot.forEach(doc => console.log(doc));\n                snapshot.forEach(doc => settings[doc.id] = {id: doc.id, ...doc.data()});\n                if (!this.unmounting) {\n                    this.setState({settings, settingsLoaded: true});\n                    if (settings.background && settings.background.url) {\n                        document.body.style.backgroundImage = `url(${settings.background.url})`\n                    }\n                }\n            } else {\n                initializeSettings(settingsRef);\n                getNewBackground(settingsRef);\n            }\n        })\n    }\n\n    toggleModal = modalState => {\n        this.setState({\n            goalModalOpen: !this.state.goalModalOpen,\n            modalState: modalState ? modalState : null\n        })\n    }\n\n    toggleRepeatModal = modalState => {\n        this.setState({\n            repeatModalOpen: !this.state.repeatModalOpen,\n            repeatModalState: modalState ? modalState : null\n        })\n    }\n    componentWillUnmount() {\n        this.unmounting = true;\n    }\n    render() {\n        return (\n            <div className=\"dash\">\n                <div className=\"dash-items\">\n                    {\n                        this.state.settingsLoaded && this.state.settings.clock.enabled &&\n                        <div className=\"dash-item\">\n                            <Clock />\n                        </div>\n                    }\n                    {\n                        this.state.settingsLoaded && this.state.settings.completedCount.enabled &&\n                        <div className=\"dash-item\">\n                            <CompletedCounter uid={this.props.user.uid}/>\n                        </div>\n                    }\n                </div>\n                <List>\n                    {\n                        this.state.goals\n                        .sort((goalA, goalB) => {\n                            const diff = goalA.date - goalB.date\n                            if (goalA.completed === goalB.completed && goalA.timedgoal && goalB.timedgoal) {\n                              return diff;\n                            } else if (goalA.completed === goalB.completed && goalA.timedgoal !== goalB.timedgoal) {\n                                return goalA.timedgoal ? -1 : 1\n                            } else if (goalA.completed && !goalB.completed) {\n                              return 1;\n                            } else if (!goalA.completed && goalB.completed){\n                                return -1;\n                            } else {\n                              return diff;\n                            }\n                        })\n                        .map(goal => (\n                            goal.multigoal\n                            ? <MultiGoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}\n                                user={this.props.user}/>\n                            : <GoalItem key={goal.id} goal={goal}\n                                toggleModal={this.toggleModal}\n                                toggleRepeatModal={this.toggleRepeatModal}/>\n                        ))\n                    }\n                </List>\n                <CenteredModal open={this.state.goalModalOpen}\n                    onClose={this.toggleModal}>\n                    <GoalForm toggleModal={this.toggleModal} initialState={this.state.modalState}/>\n                </CenteredModal>\n                <CenteredModal open={this.state.repeatModalOpen}\n                    onClose={this.toggleRepeatModal}>\n                    <RepeatForm toggleRepeatModal={this.toggleRepeatModal} initialState={this.state.repeatModalState}/>\n                </CenteredModal>\n                <br/>\n                <br/>\n                <br/>\n                <br/>\n                <Fab color=\"secondary\"\n                    variant=\"extended\"\n                    aria-label=\"Add\"\n                    id=\"dash-addBtn\"\n                    onClick={this.toggleModal}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default withFirebase(Dashboard);","import React, { Component } from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid'\nimport './about.css';\n\nclass About extends Component {\n    render() {\n        return (\n            <div className=\"about\">\n                <Grid container justify={\"center\"} alignItems={\"center\"}>\n                    <Grid item xs={12} lg={8}>\n                        <Card className=\"about-card\">\n                            <CardContent>\n                                <Typography variant={\"h3\"} align={\"center\"}>\n                                    Thanks for using Goaler!\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h5\"} align={\"center\"}>\n                                    Contact me: <a href=\"mailto:leewarrick@gmail.com\" rel=\"noopener noreferrer\" target=\"_BLANK\">leewarrick@gmail.com</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    Background Images Courtesy of <a href=\"https://unsplash.com/\">Unsplash</a> and <a href=\"https://picsum.photos\">Lorem Picsum</a>\n                                </Typography>\n                                <br/>\n                                <Typography variant={\"h6\"} align={\"center\"}>\n                                    © Lee Warrick 2019. All Rights Reserved.\n                                </Typography>\n                            </CardContent> \n                        </Card>\n                    </Grid>\n                </Grid>\n            </div>\n        )\n    }\n}\n\nexport default About;","import React, { Component } from 'react';\nimport { withFirebase } from './components/Firebase';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport Drawer from '@material-ui/core/Drawer';\nimport Login from './components/login/login';\nimport Loading from './components/loading/loading';\nimport Header from './components/header/header';\nimport MainMenu from './components/mainmenu/mainmenu';\nimport Dashboard from './components/dashboard/';\nimport Settings from './components/settings/settings';\nimport About from './components/about/about';\nimport './App.css';\n\nconst PrivateRoute = ({component: Component, user, ...rest}) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => user\n        ? <Component {...props} {...rest} user={user} />\n        : <Redirect to={{pathname: '/login', state: {from: props.location}}} />}\n        // : <Redirect to='/login' />}\n    />\n  )\n}\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: null,\n      loading: true,\n      from: null,\n      drawer: false\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.firebase.auth.onAuthStateChanged(user => {\n      if (user) {\n        this.setState({ user: user, loading: false })\n        this.props.firebase.initializeUser(user.uid);\n      } else {\n        this.setState({ user: null, loading: false });\n      }\n    })\n    document.body.style.backgroundImage = `url(https://picsum.photos/g/1920/1080?image=773)`\n  }\n\n  // writeTestData = () => {\n  //   this.props.firebase.goalsRef.add({name: \"banana Johnson\"})\n  // }\n\n  signIn = async () => {\n    const result = await this.props.firebase.signIn();\n    this.setState({ user: result.user });\n  }\n\n  signOut = () => {\n    this.props.firebase.logout();\n    this.toggleDrawer();\n  }\n\n  toggleDrawer = () => {\n    this.setState({\n      drawer: !this.state.drawer\n    })\n  }\n\n  render() {\n    return (\n      <Router basename=\"/goaler\">\n        <Loading status={this.state.loading}>\n          <div className=\"App\">\n          <Header user={this.state.user} login={this.signIn} toggleDrawer={this.toggleDrawer}/>\n          <Drawer anchor={\"right\"} open={this.state.drawer} onClose={this.toggleDrawer}>\n            <MainMenu logout={this.signOut} toggleDrawer={this.toggleDrawer}/>\n          </Drawer>\n          <Route path=\"/login\" render={(props)=> <Login {...props} user={this.state.user} login={this.signIn} />} />\n          <PrivateRoute user={this.state.user} exact path='/about' component={About}/>\n          <PrivateRoute user={this.state.user} exact path='/' component={Dashboard}/>\n          <PrivateRoute user={this.state.user} exact path='/settings' component={Settings}/>\n          {/* <Link to=\"/private\">Banana</Link>\n          <Link to=\"/private/2\">Banana2</Link>\n          <PrivateRoute user={this.state.user} exact path='/private' component={Banana} text=\"React Router\"/>\n          <PrivateRoute user={this.state.user} path='/private/:num' component={Banana} text=\"React Router\" /> */}\n          </div>\n        </Loading>\n      </Router>\n    );\n  }\n}\n\nexport default withFirebase(App);\n","import { createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport purple from '@material-ui/core/colors/purple';\nimport orange from '@material-ui/core/colors/orange';\nimport red from '@material-ui/core/colors/red';\n\n// All the following keys are optional.\n// We try our best to provide a great default value.\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n    primary: {\n        main: blue[900]\n    },\n    secondary: {\n        main: purple[400],\n      },\n    error: orange,\n    warn: red,\n    // Used by `getContrastText()` to maximize the contrast between the background and\n    // the text.\n    contrastThreshold: 3,\n    // Used to shift a color's luminance by approximately\n    // two indexes within its tonal palette.\n    // E.g., shift from Red 500 to Red 300 or Red 700.\n    tonalOffset: 0.5,\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\nexport default theme;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport theme from './theme';\nimport 'typeface-roboto';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<FirebaseContext.Provider value={new Firebase()}>\n    <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <App />\n    </MuiThemeProvider>\n</FirebaseContext.Provider>,\ndocument.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}